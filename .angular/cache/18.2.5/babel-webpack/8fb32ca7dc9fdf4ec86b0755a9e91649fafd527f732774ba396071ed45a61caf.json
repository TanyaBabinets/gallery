{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { NgFor, NgIf } from \"@angular/common\";\nimport { DataService } from './data.service';\nimport { LogService } from './log.service';\nlet AppComponent = class AppComponent {\n  dataService;\n  section = null; //стартовая страница по умолчанию просит выбор\n  showSection(sec) {\n    this.section = sec;\n  }\n  images = [];\n  selected = null; //если изображение еще не выбрано, чтоб не было ошибки\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.images = this.dataService.getData();\n  }\n  onImageClick(image) {\n    this.selected = image;\n  }\n  showdetails(image) {\n    this.selected = image;\n    this.showdetails = false;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  standalone: true,\n  imports: [FormsModule, NgFor, NgIf],\n  providers: [DataService, LogService],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}