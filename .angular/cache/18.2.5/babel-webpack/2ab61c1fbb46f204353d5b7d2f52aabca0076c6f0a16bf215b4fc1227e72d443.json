{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./log.service\";\n// Чтобы указать, что сервис может использовать другие сервисы, к классу сервиса применяется декоратор Injectable.\n// В этом случае встроенный механизм внедрения зависимостей сможет создать объект этого класса.\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    logService;\n    // В реальном приложении эти данные можно получать с сервера или из какого-либо внешнего хранилища.\n    data = [{\n      name: \"\\\"Над городом\\\"\",\n      author: \"Марк Захарович Шагал\",\n      year: 1918,\n      descr: \"ttt\",\n      img: \"../assets/shagal.jpg\"\n    }, {\n      name: \"\\\"Композиция VII\\\"\",\n      author: \"Василий Васильевич Кандинский \",\n      year: 1913,\n      descr: \"ttt\",\n      img: \"../assets/kandin.jpg\"\n    }, {\n      name: \"\\\"Поцелуй\\\"\",\n      author: \"Густав Климт\",\n      year: 1908,\n      descr: \"ttt\",\n      img: \"../assets/klimt.jpg\"\n    }, {\n      name: \"\\\"Голубые танцовщицы\\\"\",\n      author: \"Эдгар Дега\",\n      year: 1897,\n      descr: \"ttt\",\n      img: \"../assets/dega.jpg\"\n    }, {\n      name: \"\\\"Герника\\\"\",\n      author: \"Пабло Пикассо\",\n      year: 1937,\n      descr: \"ttt\",\n      img: \"../assets/gernika.jpg\"\n    }];\n    constructor(logService) {\n      this.logService = logService;\n    }\n    getData() {\n      if (this.logService) this.logService.write(\"Получение данных\");\n      return this.data;\n    }\n    static ɵfac = function DataService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DataService)(i0.ɵɵinject(i1.LogService, 8));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac\n    });\n  }\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}